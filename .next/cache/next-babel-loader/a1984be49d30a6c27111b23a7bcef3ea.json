{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Volumes/Data/Work/Digitalax/PFPMint/src/containers/modals/modal-connect-matic/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from '@components/Button';\nimport Modal from '@components/modal';\nimport { closeConnectMaticModal } from '@actions/modals.actions';\nimport styles from './styles.module.scss';\n\nvar ModalConnectMatic = function ModalConnectMatic(_ref) {\n  _s();\n\n  var className = _ref.className,\n      title = _ref.title,\n      buttonText = _ref.buttonText;\n  var dispatch = useDispatch();\n\n  var handleClose = function handleClose() {\n    dispatch(closeConnectMaticModal());\n  };\n\n  return __jsx(React.Fragment, null, /*#__PURE__*/createPortal(__jsx(Modal, {\n    onClose: function onClose() {\n      return handleClose();\n    },\n    title: title,\n    titleStyle: styles.textCenter,\n    className: className,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    className: styles.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Please make sure your wallet is connected to Matic Network so that you can get skinned!\"), __jsx(Button, {\n    background: \"black\",\n    className: styles.button,\n    onClick: handleClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, buttonText)), document.body));\n};\n\n_s(ModalConnectMatic, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ModalConnectMatic;\nModalConnectMatic.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  buttonText1: PropTypes.string,\n  buttonText2: PropTypes.string\n};\nModalConnectMatic.defaultProps = {\n  className: '',\n  title: 'CONNECT TO MATIC!',\n  buttonText: 'ACCEPT THE QUEST'\n};\nexport default ModalConnectMatic;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalConnectMatic\");","map":{"version":3,"names":["React","createPortal","useDispatch","PropTypes","Button","Modal","closeConnectMaticModal","styles","ModalConnectMatic","className","title","buttonText","dispatch","handleClose","textCenter","description","button","document","body","propTypes","string","buttonText1","buttonText2","defaultProps"],"sources":["/Volumes/Data/Work/Digitalax/PFPMint/src/containers/modals/modal-connect-matic/index.js"],"sourcesContent":["import React from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from '@components/Button';\nimport Modal from '@components/modal';\nimport { closeConnectMaticModal } from '@actions/modals.actions';\nimport styles from './styles.module.scss';\n\nconst ModalConnectMatic = ({ className, title, buttonText }) => {\n  const dispatch = useDispatch();\n  const handleClose = () => {\n    dispatch(closeConnectMaticModal());\n  };\n\n  return (\n    <>\n      {createPortal(\n        <Modal\n          onClose={() => handleClose()}\n          title={title}\n          titleStyle={styles.textCenter}\n          className={className}\n        >\n          <p className={styles.description}>\n            Please make sure your wallet is connected to Matic Network so that you can get skinned!\n          </p>\n          <Button background=\"black\" className={styles.button} onClick={handleClose}>\n            {buttonText}\n          </Button>\n        </Modal>,\n        document.body\n      )}\n    </>\n  );\n};\n\nModalConnectMatic.propTypes = {\n  className: PropTypes.string,\n  title: PropTypes.string,\n  buttonText1: PropTypes.string,\n  buttonText2: PropTypes.string,\n};\n\nModalConnectMatic.defaultProps = {\n  className: '',\n  title: 'CONNECT TO MATIC!',\n  buttonText: 'ACCEPT THE QUEST',\n};\n\nexport default ModalConnectMatic;\n"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,sBAAT,QAAuC,yBAAvC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAsC;EAAA;;EAAA,IAAnCC,SAAmC,QAAnCA,SAAmC;EAAA,IAAxBC,KAAwB,QAAxBA,KAAwB;EAAA,IAAjBC,UAAiB,QAAjBA,UAAiB;EAC9D,IAAMC,QAAQ,GAAGV,WAAW,EAA5B;;EACA,IAAMW,WAAW,GAAG,SAAdA,WAAc,GAAM;IACxBD,QAAQ,CAACN,sBAAsB,EAAvB,CAAR;EACD,CAFD;;EAIA,OACE,yCACGL,YAAY,CACX,MAAC,KAAD;IACE,OAAO,EAAE;MAAA,OAAMY,WAAW,EAAjB;IAAA,CADX;IAEE,KAAK,EAAEH,KAFT;IAGE,UAAU,EAAEH,MAAM,CAACO,UAHrB;IAIE,SAAS,EAAEL,SAJb;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAME;IAAG,SAAS,EAAEF,MAAM,CAACQ,WAArB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,6FANF,EASE,MAAC,MAAD;IAAQ,UAAU,EAAC,OAAnB;IAA2B,SAAS,EAAER,MAAM,CAACS,MAA7C;IAAqD,OAAO,EAAEH,WAA9D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGF,UADH,CATF,CADW,EAcXM,QAAQ,CAACC,IAdE,CADf,CADF;AAoBD,CA1BD;;GAAMV,iB;UACaN,W;;;KADbM,iB;AA4BNA,iBAAiB,CAACW,SAAlB,GAA8B;EAC5BV,SAAS,EAAEN,SAAS,CAACiB,MADO;EAE5BV,KAAK,EAAEP,SAAS,CAACiB,MAFW;EAG5BC,WAAW,EAAElB,SAAS,CAACiB,MAHK;EAI5BE,WAAW,EAAEnB,SAAS,CAACiB;AAJK,CAA9B;AAOAZ,iBAAiB,CAACe,YAAlB,GAAiC;EAC/Bd,SAAS,EAAE,EADoB;EAE/BC,KAAK,EAAE,mBAFwB;EAG/BC,UAAU,EAAE;AAHmB,CAAjC;AAMA,eAAeH,iBAAf"},"metadata":{},"sourceType":"module"}