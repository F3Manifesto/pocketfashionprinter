{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/Work/Digitalax/PFPMint/src/components/layouts/header-top-line/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Link from \"next/link\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\nimport { getUser } from \"@selectors/user.selectors\";\nimport Button from \"@components/buttons/button\";\nimport styles from \"./styles.module.scss\";\nimport { openConnectMetamaskModal } from \"@actions/modals.actions\";\nimport SmallPhotoWithText from \"@components/small-photo-with-text\";\n\nconst HeaderTopLine = ({\n  buttonText\n}) => {\n  const {\n    0: isCollapse,\n    1: setIsCollapse\n  } = useState(false);\n  const {\n    0: isShowMenu,\n    1: setIsShowMenu\n  } = useState(false);\n  const dispatch = useDispatch();\n  const user = useSelector(getUser);\n\n  const handleClick = () => {\n    dispatch(openConnectMetamaskModal());\n  };\n\n  return __jsx(\"div\", {\n    className: styles.headerWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(\"img\", {\n    src: \"/images/logo.png\",\n    className: styles.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: cn(styles.links, isCollapse ? styles.expandedMenu : \"\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    className: styles.mobileBtn,\n    onClick: () => setIsCollapse(!isCollapse),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), __jsx(\"img\", {\n    src: \"/images/icons/close-button.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: styles.menuBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.signBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, user ? __jsx(\"div\", {\n    className: styles.buttonWrapper,\n    onClick: () => setIsShowMenu(!isShowMenu),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, __jsx(SmallPhotoWithText, {\n    photo: user.get(\"avatar\") ? user.get(\"avatar\") : \"./images/user-profile/user-avatar-black.png\",\n    address: user.get(\"username\"),\n    className: styles.hashAddress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, __jsx(\"button\", {\n    className: styles.arrowBottom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 19\n    }\n  }, __jsx(\"img\", {\n    className: styles.arrowBottomImg,\n    src: \"./images/icons/arrow-bottom.svg\",\n    alt: \"arrow-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }))), isShowMenu && __jsx(\"div\", {\n    className: styles.menuWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, __jsx(\"button\", {\n    onClick: () => handleProfileClick(),\n    className: styles.menuButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, \"Profile\"), __jsx(\"button\", {\n    onClick: () => handleManageInventory(),\n    className: styles.menuButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, \"Manage Inventory\"), __jsx(\"button\", {\n    onClick: () => handleLogoutClick(),\n    className: styles.menuButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, \"Logout\"))) : __jsx(Button, {\n    className: styles.signInButton,\n    onClick: () => handleClick(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 15\n    }\n  }, buttonText)))));\n};\n\nHeaderTopLine.propTypes = {\n  className: PropTypes.string,\n  isShowStaking: PropTypes.bool,\n  buttonText: PropTypes.string,\n  linkText: PropTypes.string\n};\nHeaderTopLine.defaultProps = {\n  className: \"\",\n  isShowStaking: false,\n  buttonText: \"SIGN IN\"\n};\nexport default HeaderTopLine;","map":{"version":3,"names":["React","useState","Link","useDispatch","useSelector","PropTypes","cn","getUser","Button","styles","openConnectMetamaskModal","SmallPhotoWithText","HeaderTopLine","buttonText","isCollapse","setIsCollapse","isShowMenu","setIsShowMenu","dispatch","user","handleClick","headerWrapper","logo","links","expandedMenu","mobileBtn","menuBar","signBtn","buttonWrapper","get","hashAddress","arrowBottom","arrowBottomImg","menuWrapper","handleProfileClick","menuButton","handleManageInventory","handleLogoutClick","signInButton","propTypes","className","string","isShowStaking","bool","linkText","defaultProps"],"sources":["/Volumes/Data/Work/Digitalax/PFPMint/src/components/layouts/header-top-line/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Link from \"next/link\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport cn from \"classnames\";\n\nimport { getUser } from \"@selectors/user.selectors\";\nimport Button from \"@components/buttons/button\";\n\nimport styles from \"./styles.module.scss\";\nimport { openConnectMetamaskModal } from \"@actions/modals.actions\";\nimport SmallPhotoWithText from \"@components/small-photo-with-text\";\n\nconst HeaderTopLine = ({ buttonText }) => {\n  const [isCollapse, setIsCollapse] = useState(false);\n  const [isShowMenu, setIsShowMenu] = useState(false);\n  const dispatch = useDispatch();\n  const user = useSelector(getUser);\n\n  const handleClick = () => {\n    dispatch(openConnectMetamaskModal());\n  };\n\n  return (\n    <div className={styles.headerWrapper}>\n      <Link href=\"/\">\n        <img src=\"/images/logo.png\" className={styles.logo} />\n      </Link>\n\n      <div className={cn(styles.links, isCollapse ? styles.expandedMenu : \"\")}>\n        <button\n          className={styles.mobileBtn}\n          onClick={() => setIsCollapse(!isCollapse)}\n        >\n          <div></div>\n          <div></div>\n          <div></div>\n          <img src=\"/images/icons/close-button.svg\" />\n        </button>\n\n        <div className={styles.menuBar}>\n          {/* <a\n            href=\"https://docs.f3manifesto.xyz/\"\n            className={styles.link}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            DOCUMENTATION\n          </a>\n          <a\n            href=\"https://web3fashionmanifesto.f3manifesto.xyz/manifesto/1/\"\n            className={styles.link}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Web3 Fashion manifesto\n          </a>\n\n          <a\n            href=\"https://mirror.xyz/f3manifesto.eth\"\n            className={styles.link}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Sub-thread weekly\n          </a>\n          <a\n            href=\"https://themanifest.f3manifesto.xyz/\"\n            className={styles.link}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            young letters to a vc\n          </a>\n          <a\n            href=\"https://web3cc0openlibrary.f3manifesto.xyz/\"\n            className={styles.link}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Matic-Eth Bridge\n          </a> */}\n\n          <div className={styles.signBtn}>\n            {user ? (\n              <div\n                className={styles.buttonWrapper}\n                onClick={() => setIsShowMenu(!isShowMenu)}\n              >\n                <SmallPhotoWithText\n                  photo={\n                    user.get(\"avatar\")\n                      ? user.get(\"avatar\")\n                      : \"./images/user-profile/user-avatar-black.png\"\n                  }\n                  address={user.get(\"username\")}\n                  className={styles.hashAddress}\n                >\n                  <button className={styles.arrowBottom}>\n                    <img\n                      className={styles.arrowBottomImg}\n                      src=\"./images/icons/arrow-bottom.svg\"\n                      alt=\"arrow-bottom\"\n                    />\n                  </button>\n                </SmallPhotoWithText>\n                {isShowMenu && (\n                  <div className={styles.menuWrapper}>\n                    <button\n                      onClick={() => handleProfileClick()}\n                      className={styles.menuButton}\n                    >\n                      Profile\n                    </button>\n                    <button\n                      onClick={() => handleManageInventory()}\n                      className={styles.menuButton}\n                    >\n                      Manage Inventory\n                    </button>\n                    <button\n                      onClick={() => handleLogoutClick()}\n                      className={styles.menuButton}\n                    >\n                      Logout\n                    </button>\n                  </div>\n                )}\n              </div>\n            ) : (\n              <Button\n                className={styles.signInButton}\n                onClick={() => handleClick()}\n              >\n                {buttonText}\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nHeaderTopLine.propTypes = {\n  className: PropTypes.string,\n  isShowStaking: PropTypes.bool,\n  buttonText: PropTypes.string,\n  linkText: PropTypes.string,\n};\n\nHeaderTopLine.defaultProps = {\n  className: \"\",\n  isShowStaking: false,\n  buttonText: \"SIGN IN\",\n};\n\nexport default HeaderTopLine;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}