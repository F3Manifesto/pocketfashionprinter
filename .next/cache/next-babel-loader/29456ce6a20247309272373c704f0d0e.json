{"ast":null,"code":"import { closeConnectMetamaskModal, closeSignupModal, openNotInstalledMetamask, openSignupModal } from '@actions/modals.actions';\nimport globalActions from '@actions/global.new.actions';\nimport { STORAGE_IS_LOGGED_IN, STORAGE_USER, STORAGE_TOKEN, STORAGE_WALLET } from '@constants/storage.constants';\nimport { WALLET_METAMASK, WALLET_ARKANE } from '@constants/global.constants';\nimport userReducer from '@reducers/user.reducer';\nimport { handleSignMessage, isMetamaskInstalled } from '@services/metamask.service';\nimport { setWeb3Provider } from '@services/web3-provider.service';\nimport { getUser, getAuthToken } from '@helpers/user.helpers';\nimport BaseActions from './base-actions';\nimport api from '@services/api/espa/api.service';\nimport { toast } from 'react-toastify';\nimport Router from 'next/router';\nimport { openSuccessModal } from '@actions/modals.actions';\n\nclass UserActions extends BaseActions {\n  handleArkaneWeb3Load() {\n    return async dispatch => {\n      try {\n        const chainId = await window.web3.eth.getChainId();\n        const authResult = await Arkane.checkAuthenticated();\n        const {\n          auth: {\n            idTokenParsed: {\n              email\n            }\n          }\n        } = authResult;\n        const wallets = await window.web3.eth.getAccounts();\n        localStorage.setItem(STORAGE_IS_LOGGED_IN, 1);\n        localStorage.setItem('account', wallets[0]);\n        dispatch(this.setValue('account', wallets[0]));\n        dispatch(closeConnectMetamaskModal());\n        dispatch(openSignupModal({\n          email\n        }));\n        dispatch(globalActions.changeNetwork('0x' + chainId.toString(16)));\n      } catch (e) {\n        toast.error('Wallet Connect is failed');\n      }\n    };\n  }\n\n  tryToLogin(source) {\n    return async dispatch => {\n      localStorage.setItem(STORAGE_WALLET, source);\n      await setWeb3Provider();\n\n      if (source === WALLET_METAMASK) {\n        if (!isMetamaskInstalled()) {\n          dispatch(openNotInstalledMetamask());\n          console.log('METAMASK WAS NOT DETECTED ON TRY TO LOGIN');\n          return;\n        }\n\n        const {\n          ethereum\n        } = window;\n\n        try {\n          const [account] = await ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n\n          if (!account) {\n            console.error('Account is epmty.');\n            return;\n          }\n\n          localStorage.setItem(STORAGE_IS_LOGGED_IN, 1);\n          localStorage.setItem('account', account);\n          dispatch(this.setValue('account', account));\n          dispatch(closeConnectMetamaskModal());\n          dispatch(openSignupModal());\n          dispatch(globalActions.initApp());\n        } catch (e) {\n          console.error(e.message);\n        }\n      } else if (source === WALLET_ARKANE) {\n        dispatch(this.handleArkaneWeb3Load());\n      }\n    };\n  }\n\n  tryToSignup(account, userName, email, signMsg, ip) {\n    return async dispatch => {\n      dispatch(this.setValue('isLoading', true));\n      console.log('-------------- here 1 ----------');\n      var isSignup = false;\n\n      if (!signMsg) {\n        isSignup = true;\n        signMsg = await api.handleSignUp(account, userName, email, ip);\n\n        if (!signMsg) {\n          toast.error('Sign Up is failed');\n          dispatch(this.setValue('isLoading', false));\n          return;\n        }\n      }\n\n      try {\n        console.log('-------------- before handleSignMessage ----------');\n        const {\n          signature\n        } = await handleSignMessage({\n          publicAddress: account,\n          signMsg\n        });\n        console.log('-------------- after handleSignMessage ----------');\n        dispatch(this.tryAuthentication(account, signMsg, signature, isSignup));\n      } catch (e) {\n        dispatch(this.setValue('isLoading', false));\n        console.log('error: ', e);\n      }\n    };\n  }\n\n  tryAuthentication(account, signMsg, signature, isSignup) {\n    return async dispatch => {\n      try {\n        console.log('account: ', account);\n        console.log('signMsg: ', signMsg);\n        console.log('signature: ', signature);\n        const data = await api.handleAuthentication(account, signMsg, signature);\n\n        if (data) {\n          const {\n            returnData,\n            secret\n          } = data;\n          dispatch(this.setValue('user', returnData));\n          localStorage.setItem(STORAGE_IS_LOGGED_IN, 1);\n          localStorage.setItem(STORAGE_USER, JSON.stringify(returnData));\n          localStorage.setItem(STORAGE_TOKEN, secret);\n          console.log('signin'); // Router.push('/')\n        } else {\n          dispatch(this.logout());\n        }\n      } catch (e) {\n        console.error(e.message);\n        dispatch(this.logout());\n      }\n\n      console.log('signup');\n\n      if (isSignup) {\n        dispatch(this.logout());\n        dispatch(openSuccessModal());\n      } else {// Router.push('/')\n      }\n\n      dispatch(closeSignupModal());\n      dispatch(this.setValue('isLoading', false));\n    };\n  }\n\n  logout() {\n    return async dispatch => {\n      dispatch(this.setValue('user', null));\n      localStorage.removeItem(STORAGE_IS_LOGGED_IN);\n      localStorage.removeItem(STORAGE_USER);\n      localStorage.removeItem(STORAGE_TOKEN);\n      localStorage.removeItem('account');\n      Router.push('/');\n    };\n  }\n\n  updateProfile(user) {\n    return async dispatch => {\n      try {\n        dispatch(this.setValue('isLoading', true));\n        const isProfanity = await api.checkProfanity(user.username);\n\n        if (isProfanity) {\n          toast('We detected profanity in the username, please input a different one. If you believe this is a mistake, please get in touch with on our support channels');\n          dispatch(this.setValue('isLoading', false));\n          return;\n        }\n\n        const data = await api.updateProfile(user);\n\n        if (data) {\n          dispatch(this.setValue('user', data));\n          localStorage.setItem(STORAGE_USER, JSON.stringify(data));\n          toast('Profile is updated');\n        } else {}\n      } catch (e) {}\n\n      dispatch(this.setValue('isLoading', false));\n    };\n  }\n\n  checkStorageAuth() {\n    return async dispatch => {\n      const user = getUser();\n      const token = getAuthToken();\n\n      if (!user || !token) {\n        return;\n      }\n\n      await setWeb3Provider();\n      dispatch(this.setValue('account', localStorage.getItem('account')));\n      dispatch(this.setValue('user', user));\n    };\n  }\n\n  uploadAvatar(file) {\n    return async dispatch => {\n      try {\n        dispatch(this.setValue('isLoading', true));\n        let url = await api.getPresignedUrl();\n\n        if (url) {\n          const result = await api.uploadImageToS3(url, file);\n\n          if (result) {\n            const user = getUser();\n            const queryIndex = url.indexOf('?');\n\n            if (queryIndex >= 0) {\n              url = url.slice(0, queryIndex);\n            }\n\n            user.avatar = url;\n            dispatch(this.updateProfile(user));\n          }\n        }\n      } catch (e) {}\n\n      dispatch(this.setValue('isLoading', false));\n    };\n  }\n\n}\n\nexport default new UserActions(userReducer);","map":{"version":3,"names":["closeConnectMetamaskModal","closeSignupModal","openNotInstalledMetamask","openSignupModal","globalActions","STORAGE_IS_LOGGED_IN","STORAGE_USER","STORAGE_TOKEN","STORAGE_WALLET","WALLET_METAMASK","WALLET_ARKANE","userReducer","handleSignMessage","isMetamaskInstalled","setWeb3Provider","getUser","getAuthToken","BaseActions","api","toast","Router","openSuccessModal","UserActions","handleArkaneWeb3Load","dispatch","chainId","window","web3","eth","getChainId","authResult","Arkane","checkAuthenticated","auth","idTokenParsed","email","wallets","getAccounts","localStorage","setItem","setValue","changeNetwork","toString","e","error","tryToLogin","source","console","log","ethereum","account","request","method","initApp","message","tryToSignup","userName","signMsg","ip","isSignup","handleSignUp","signature","publicAddress","tryAuthentication","data","handleAuthentication","returnData","secret","JSON","stringify","logout","removeItem","push","updateProfile","user","isProfanity","checkProfanity","username","checkStorageAuth","token","getItem","uploadAvatar","file","url","getPresignedUrl","result","uploadImageToS3","queryIndex","indexOf","slice","avatar"],"sources":["/Volumes/Data/Work/Digitalax/PFPMint/src/actions/user.actions.js"],"sourcesContent":["import {\n  closeConnectMetamaskModal,\n  closeSignupModal,\n  openNotInstalledMetamask,\n  openSignupModal,\n} from '@actions/modals.actions'\nimport globalActions from '@actions/global.new.actions'\nimport {\n  STORAGE_IS_LOGGED_IN,\n  STORAGE_USER,\n  STORAGE_TOKEN,\n  STORAGE_WALLET,\n} from '@constants/storage.constants'\nimport { WALLET_METAMASK, WALLET_ARKANE } from '@constants/global.constants'\nimport userReducer from '@reducers/user.reducer'\nimport { handleSignMessage, isMetamaskInstalled } from '@services/metamask.service'\nimport { setWeb3Provider } from '@services/web3-provider.service'\nimport { getUser, getAuthToken } from '@helpers/user.helpers'\nimport BaseActions from './base-actions'\nimport api from '@services/api/espa/api.service'\nimport { toast } from 'react-toastify'\nimport Router from 'next/router'\nimport { openSuccessModal } from '@actions/modals.actions'\n\nclass UserActions extends BaseActions {\n  handleArkaneWeb3Load() {\n    return async (dispatch) => {\n      try {\n        const chainId = await window.web3.eth.getChainId()\n        const authResult = await Arkane.checkAuthenticated()\n        const {\n          auth: {\n            idTokenParsed: { email },\n          },\n        } = authResult\n        const wallets = await window.web3.eth.getAccounts()\n        localStorage.setItem(STORAGE_IS_LOGGED_IN, 1)\n        localStorage.setItem('account', wallets[0])\n        dispatch(this.setValue('account', wallets[0]))\n        dispatch(closeConnectMetamaskModal())\n        dispatch(openSignupModal({ email }))\n        dispatch(globalActions.changeNetwork('0x' + chainId.toString(16)))\n      } catch (e) {\n        toast.error('Wallet Connect is failed')\n      }\n    }\n  }\n\n  tryToLogin(source) {\n    return async (dispatch) => {\n      localStorage.setItem(STORAGE_WALLET, source)\n      await setWeb3Provider()\n      if (source === WALLET_METAMASK) {\n        if (!isMetamaskInstalled()) {\n          dispatch(openNotInstalledMetamask())\n          console.log('METAMASK WAS NOT DETECTED ON TRY TO LOGIN')\n          return\n        }\n\n        const { ethereum } = window\n\n        try {\n          const [account] = await ethereum.request({\n            method: 'eth_requestAccounts',\n          })\n\n          if (!account) {\n            console.error('Account is epmty.')\n            return\n          }\n\n          localStorage.setItem(STORAGE_IS_LOGGED_IN, 1)\n          localStorage.setItem('account', account)\n          dispatch(this.setValue('account', account))\n          dispatch(closeConnectMetamaskModal())\n          dispatch(openSignupModal())\n          dispatch(globalActions.initApp())\n        } catch (e) {\n          console.error(e.message)\n        }\n      } else if (source === WALLET_ARKANE) {\n        dispatch(this.handleArkaneWeb3Load())\n      }\n    }\n  }\n\n  tryToSignup(account, userName, email, signMsg, ip) {\n    return async (dispatch) => {\n      dispatch(this.setValue('isLoading', true))\n      console.log('-------------- here 1 ----------')\n      var isSignup = false\n\n      if (!signMsg) {\n        isSignup = true\n        signMsg = await api.handleSignUp(account, userName, email, ip)\n        if (!signMsg) {\n          toast.error('Sign Up is failed')\n          dispatch(this.setValue('isLoading', false))\n          return\n        }\n      }\n\n      try {\n        console.log('-------------- before handleSignMessage ----------')\n        const { signature } = await handleSignMessage({\n          publicAddress: account,\n          signMsg,\n        })\n        console.log('-------------- after handleSignMessage ----------')\n        dispatch(this.tryAuthentication(account, signMsg, signature, isSignup))\n      } catch (e) {\n        dispatch(this.setValue('isLoading', false))\n        console.log('error: ', e)\n      }\n    }\n  }\n\n  tryAuthentication(account, signMsg, signature, isSignup) {\n    return async (dispatch) => {\n      try {\n        console.log('account: ', account)\n        console.log('signMsg: ', signMsg)\n        console.log('signature: ', signature)\n\n        const data = await api.handleAuthentication(account, signMsg, signature)\n        if (data) {\n          const { returnData, secret } = data\n          dispatch(this.setValue('user', returnData))\n          localStorage.setItem(STORAGE_IS_LOGGED_IN, 1)\n          localStorage.setItem(STORAGE_USER, JSON.stringify(returnData))\n          localStorage.setItem(STORAGE_TOKEN, secret)\n\n          console.log('signin')\n          // Router.push('/')\n        } else {\n          dispatch(this.logout())\n        }\n      } catch (e) {\n        console.error(e.message)\n        dispatch(this.logout())\n      }\n      console.log('signup')\n      if (isSignup) {\n        dispatch(this.logout())\n        dispatch(openSuccessModal())\n      } else {\n        // Router.push('/')\n      }\n\n      dispatch(closeSignupModal())\n      dispatch(this.setValue('isLoading', false))\n    }\n  }\n\n  logout() {\n    return async (dispatch) => {\n      dispatch(this.setValue('user', null))\n      localStorage.removeItem(STORAGE_IS_LOGGED_IN)\n      localStorage.removeItem(STORAGE_USER)\n      localStorage.removeItem(STORAGE_TOKEN)\n      localStorage.removeItem('account')\n      Router.push('/')\n    }\n  }\n\n  updateProfile(user) {\n    return async (dispatch) => {\n      try {\n        dispatch(this.setValue('isLoading', true))\n        const isProfanity = await api.checkProfanity(user.username)\n        if (isProfanity) {\n          toast(\n            'We detected profanity in the username, please input a different one. If you believe this is a mistake, please get in touch with on our support channels'\n          )\n          dispatch(this.setValue('isLoading', false))\n          return\n        }\n        const data = await api.updateProfile(user)\n        if (data) {\n          dispatch(this.setValue('user', data))\n          localStorage.setItem(STORAGE_USER, JSON.stringify(data))\n          toast('Profile is updated')\n        } else {\n        }\n      } catch (e) {}\n      dispatch(this.setValue('isLoading', false))\n    }\n  }\n\n  checkStorageAuth() {\n    return async (dispatch) => {\n      const user = getUser()\n      const token = getAuthToken()\n      if (!user || !token) {\n        return\n      }\n      await setWeb3Provider()\n      dispatch(this.setValue('account', localStorage.getItem('account')))\n      dispatch(this.setValue('user', user))\n    }\n  }\n\n  uploadAvatar(file) {\n    return async (dispatch) => {\n      try {\n        dispatch(this.setValue('isLoading', true))\n        let url = await api.getPresignedUrl()\n        if (url) {\n          const result = await api.uploadImageToS3(url, file)\n          if (result) {\n            const user = getUser()\n            const queryIndex = url.indexOf('?')\n            if (queryIndex >= 0) {\n              url = url.slice(0, queryIndex)\n            }\n            user.avatar = url\n            dispatch(this.updateProfile(user))\n          }\n        }\n      } catch (e) {}\n      dispatch(this.setValue('isLoading', false))\n    }\n  }\n}\n\nexport default new UserActions(userReducer)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}