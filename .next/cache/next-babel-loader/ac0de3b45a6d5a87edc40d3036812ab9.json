{"ast":null,"code":"import Units from 'ethereumjs-units';\nexport const getSumFloatNumber = (firstValue, secondValue, numberAfterComma = 2) => {\n  const result = Math.round(firstValue * 10 ** numberAfterComma) + Math.round(secondValue * 10 ** numberAfterComma);\n  return result / 10 ** numberAfterComma;\n};\nexport const getSubtractFloatNumber = (firstValue, secondValue, numberAfterComma = 2) => {\n  const result = Math.round(firstValue * 10 ** numberAfterComma) - Math.round(secondValue * 10 ** numberAfterComma);\n  return result / 10 ** numberAfterComma;\n};\nexport const convertToEth = value => {\n  if (!value) {\n    return '0';\n  }\n\n  value = String(value);\n  const modifier = value.search('-') === -1 ? '' : '-';\n  return modifier + Units.convert(value.replace('-', ''), 'wei', 'eth');\n};\nexport const convertToWei = value => {\n  if (!value) {\n    return '0';\n  }\n\n  return Units.convert(value, 'eth', 'wei');\n};","map":{"version":3,"names":["Units","getSumFloatNumber","firstValue","secondValue","numberAfterComma","result","Math","round","getSubtractFloatNumber","convertToEth","value","String","modifier","search","convert","replace","convertToWei"],"sources":["/Volumes/Data/Work/Digitalax/PFPMint/src/helpers/price.helpers.js"],"sourcesContent":["import Units from 'ethereumjs-units';\n\nexport const getSumFloatNumber = (firstValue, secondValue, numberAfterComma = 2) => {\n  const result =\n    Math.round(firstValue * 10 ** numberAfterComma) +\n    Math.round(secondValue * 10 ** numberAfterComma);\n  return result / 10 ** numberAfterComma;\n};\n\nexport const getSubtractFloatNumber = (firstValue, secondValue, numberAfterComma = 2) => {\n  const result =\n    Math.round(firstValue * 10 ** numberAfterComma) -\n    Math.round(secondValue * 10 ** numberAfterComma);\n  return result / 10 ** numberAfterComma;\n};\n\nexport const convertToEth = (value) => {\n  if (!value) {\n    return '0';\n  }\n\n  value = String(value);\n\n  const modifier = value.search('-') === -1 ? '' : '-';\n\n  return modifier + Units.convert(value.replace('-', ''), 'wei', 'eth');\n};\n\nexport const convertToWei = (value) => {\n  if (!value) {\n    return '0';\n  }\n\n  return Units.convert(value, 'eth', 'wei');\n};\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAACC,UAAD,EAAaC,WAAb,EAA0BC,gBAAgB,GAAG,CAA7C,KAAmD;EAClF,MAAMC,MAAM,GACVC,IAAI,CAACC,KAAL,CAAWL,UAAU,GAAG,MAAME,gBAA9B,IACAE,IAAI,CAACC,KAAL,CAAWJ,WAAW,GAAG,MAAMC,gBAA/B,CAFF;EAGA,OAAOC,MAAM,GAAG,MAAMD,gBAAtB;AACD,CALM;AAOP,OAAO,MAAMI,sBAAsB,GAAG,CAACN,UAAD,EAAaC,WAAb,EAA0BC,gBAAgB,GAAG,CAA7C,KAAmD;EACvF,MAAMC,MAAM,GACVC,IAAI,CAACC,KAAL,CAAWL,UAAU,GAAG,MAAME,gBAA9B,IACAE,IAAI,CAACC,KAAL,CAAWJ,WAAW,GAAG,MAAMC,gBAA/B,CAFF;EAGA,OAAOC,MAAM,GAAG,MAAMD,gBAAtB;AACD,CALM;AAOP,OAAO,MAAMK,YAAY,GAAIC,KAAD,IAAW;EACrC,IAAI,CAACA,KAAL,EAAY;IACV,OAAO,GAAP;EACD;;EAEDA,KAAK,GAAGC,MAAM,CAACD,KAAD,CAAd;EAEA,MAAME,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa,GAAb,MAAsB,CAAC,CAAvB,GAA2B,EAA3B,GAAgC,GAAjD;EAEA,OAAOD,QAAQ,GAAGZ,KAAK,CAACc,OAAN,CAAcJ,KAAK,CAACK,OAAN,CAAc,GAAd,EAAmB,EAAnB,CAAd,EAAsC,KAAtC,EAA6C,KAA7C,CAAlB;AACD,CAVM;AAYP,OAAO,MAAMC,YAAY,GAAIN,KAAD,IAAW;EACrC,IAAI,CAACA,KAAL,EAAY;IACV,OAAO,GAAP;EACD;;EAED,OAAOV,KAAK,CAACc,OAAN,CAAcJ,KAAd,EAAqB,KAArB,EAA4B,KAA5B,CAAP;AACD,CANM"},"metadata":{},"sourceType":"module"}