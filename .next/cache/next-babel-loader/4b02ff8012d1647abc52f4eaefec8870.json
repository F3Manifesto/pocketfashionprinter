{"ast":null,"code":"// import cryptoReducer from '../reducers/crypto.reducer'\n// const { actions } = cryptoReducer\n// export const setCrypto = (crypto) => (dispatch) => dispatch(actions.setValue({ field: 'selectedCrypto', value: crypto }))\nimport BaseActions from '@actions/base-actions';\nimport cryptoReducer from '@reducers/crypto.reducer';\n\nclass CryptoActions extends BaseActions {\n  setCrypto(crypto) {\n    return async dispatch => {\n      dispatch(this.setValue('selectedCrypto', crypto));\n    };\n  }\n\n  setTicketPrice(price) {\n    return async dispatch => {\n      dispatch(this.setValue('ticketPrice', price));\n    };\n  }\n\n}\n\nexport default new CryptoActions(cryptoReducer);","map":{"version":3,"names":["BaseActions","cryptoReducer","CryptoActions","setCrypto","crypto","dispatch","setValue","setTicketPrice","price"],"sources":["/Volumes/Data/Work/Digitalax/PFPMint/src/actions/crypto.actions.js"],"sourcesContent":["// import cryptoReducer from '../reducers/crypto.reducer'\n\n// const { actions } = cryptoReducer\n\n// export const setCrypto = (crypto) => (dispatch) => dispatch(actions.setValue({ field: 'selectedCrypto', value: crypto }))\n\nimport BaseActions from '@actions/base-actions'\nimport cryptoReducer from '@reducers/crypto.reducer'\n\nclass CryptoActions extends BaseActions {\n  setCrypto(crypto) {\n    return async (dispatch) => {\n      dispatch(this.setValue('selectedCrypto', crypto))\n    }\n  }\n\n  setTicketPrice(price) {\n    return async (dispatch) => {\n      dispatch(this.setValue('ticketPrice', price))\n    }\n  }\n}\n\nexport default new CryptoActions(cryptoReducer)"],"mappings":"AAAA;AAEA;AAEA;AAEA,OAAOA,WAAP,MAAwB,uBAAxB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;;AAEA,MAAMC,aAAN,SAA4BF,WAA5B,CAAwC;EACtCG,SAAS,CAACC,MAAD,EAAS;IAChB,OAAO,MAAOC,QAAP,IAAoB;MACzBA,QAAQ,CAAC,KAAKC,QAAL,CAAc,gBAAd,EAAgCF,MAAhC,CAAD,CAAR;IACD,CAFD;EAGD;;EAEDG,cAAc,CAACC,KAAD,EAAQ;IACpB,OAAO,MAAOH,QAAP,IAAoB;MACzBA,QAAQ,CAAC,KAAKC,QAAL,CAAc,aAAd,EAA6BE,KAA7B,CAAD,CAAR;IACD,CAFD;EAGD;;AAXqC;;AAcxC,eAAe,IAAIN,aAAJ,CAAkBD,aAAlB,CAAf"},"metadata":{},"sourceType":"module"}