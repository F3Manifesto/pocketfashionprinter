{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\n\n/**\n * Base actions for work with store by selected reducer\n */\nvar BaseActions = /*#__PURE__*/function () {\n  /** Select reducer\n  * @constructor\n  * @param reducer\n  */\n  function BaseActions(reducer) {\n    _classCallCheck(this, BaseActions);\n\n    this.reducer = reducer;\n  }\n  /**\n  * Set value to reducer\n  * @param {string|array} field\n  * @param {any} value\n  * @param {boolean} [isFromJS]\n  * @returns {function}\n  */\n\n\n  _createClass(BaseActions, [{\n    key: \"setValue\",\n    value: function setValue(field, value) {\n      var isFromJS = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      return this.callAction('set', {\n        field: field,\n        value: value,\n        isFromJS: isFromJS\n      });\n    }\n    /**\n    * Set multiple values\n    * @param {Object} payload\n    * @returns {Function}\n    */\n\n  }, {\n    key: \"setMultipleValue\",\n    value: function setMultipleValue(payload) {\n      return this.callAction('setMultiple', payload);\n    }\n    /**\n     * set in\n     * @param {string} field\n     * @param {string} params\n     * @return {function(...[*]=)}\n     */\n\n  }, {\n    key: \"setIn\",\n    value: function setIn(field, params) {\n      return this.callAction('setIn', {\n        field: field,\n        params: params\n      });\n    }\n    /**\n    * Reset reducer to default values\n    * @returns {Function}\n    */\n\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      return this.callAction('clear');\n    }\n    /**\n    * Reset only one field in reducer to default values\n    * @param {String} field\n    * @returns {Function}\n    */\n\n  }, {\n    key: \"clearByField\",\n    value: function clearByField(field) {\n      return this.callAction('clearByField', {\n        field: field\n      });\n    }\n    /**\n    * Is exist reducer\n    * @returns {boolean}\n    * @private\n    */\n\n  }, {\n    key: \"isExistReducer\",\n    value: function isExistReducer() {\n      return !!this.reducer || !!this.reducer.actions;\n    }\n    /**\n    * Is exist called reducer action\n    * @param {String} name\n    * @returns {boolean}\n    * @private\n    */\n\n  }, {\n    key: \"isExistAction\",\n    value: function isExistAction(name) {\n      return !!this.reducer.actions[name];\n    }\n    /**\n    * Call reducer action\n    * @param {String} action\n    * @param payload\n    * @returns {Function}\n    * @private\n    */\n\n  }, {\n    key: \"callAction\",\n    value: function callAction(action) {\n      var _this = this;\n\n      var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n      if (!this.isExistReducer()) {\n        throw new Error('Reducer not found');\n      }\n\n      if (!this.isExistAction(action)) {\n        throw new Error(\"Action \\\"\".concat(action, \"\\\" in reducer not found\"));\n      }\n\n      return function (dispatch) {\n        dispatch(_this.reducer.actions[action](payload));\n      };\n    }\n  }]);\n\n  return BaseActions;\n}();\n\nexport { BaseActions as default };","map":{"version":3,"names":["BaseActions","reducer","field","value","isFromJS","callAction","payload","params","actions","name","action","undefined","isExistReducer","Error","isExistAction","dispatch"],"sources":["/Volumes/Data/Work/Digitalax/PFPMint/src/actions/base-actions.js"],"sourcesContent":["/**\n * Base actions for work with store by selected reducer\n */\nexport default class BaseActions {\n\n  /** Select reducer\n  * @constructor\n  * @param reducer\n  */\n  constructor(reducer) {\n    this.reducer = reducer;\n  }\n\n  /**\n  * Set value to reducer\n  * @param {string|array} field\n  * @param {any} value\n  * @param {boolean} [isFromJS]\n  * @returns {function}\n  */\n  setValue(field, value, isFromJS = true) {\n    return this.callAction('set', { field, value, isFromJS });\n  }\n\n  /**\n  * Set multiple values\n  * @param {Object} payload\n  * @returns {Function}\n  */\n  setMultipleValue(payload) {\n    return this.callAction('setMultiple', payload);\n  }\n\n  /**\n   * set in\n   * @param {string} field\n   * @param {string} params\n   * @return {function(...[*]=)}\n   */\n  setIn(field, params) {\n    return this.callAction('setIn', { field, params });\n  }\n\n  /**\n  * Reset reducer to default values\n  * @returns {Function}\n  */\n  clear() {\n    return this.callAction('clear');\n  }\n\n  /**\n  * Reset only one field in reducer to default values\n  * @param {String} field\n  * @returns {Function}\n  */\n  clearByField(field) {\n    return this.callAction('clearByField', { field });\n  }\n\n  /**\n  * Is exist reducer\n  * @returns {boolean}\n  * @private\n  */\n  isExistReducer() {\n    return !!this.reducer || !!this.reducer.actions;\n  }\n\n  /**\n  * Is exist called reducer action\n  * @param {String} name\n  * @returns {boolean}\n  * @private\n  */\n  isExistAction(name) {\n    return !!this.reducer.actions[name];\n  }\n\n  /**\n  * Call reducer action\n  * @param {String} action\n  * @param payload\n  * @returns {Function}\n  * @private\n  */\n  callAction(action, payload = undefined) {\n    if (!this.isExistReducer()) {\n      throw new Error('Reducer not found');\n    }\n    if (!this.isExistAction(action)) {\n      throw new Error(`Action \"${action}\" in reducer not found`);\n    }\n    return (dispatch) => {\n      dispatch(this.reducer.actions[action](payload));\n    };\n  }\n\n}\n"],"mappings":";;;AAAA;AACA;AACA;IACqBA,W;EAEnB;AACF;AACA;AACA;EACE,qBAAYC,OAAZ,EAAqB;IAAA;;IACnB,KAAKA,OAAL,GAAeA,OAAf;EACD;EAED;AACF;AACA;AACA;AACA;AACA;AACA;;;;;WACE,kBAASC,KAAT,EAAgBC,KAAhB,EAAwC;MAAA,IAAjBC,QAAiB,uEAAN,IAAM;MACtC,OAAO,KAAKC,UAAL,CAAgB,KAAhB,EAAuB;QAAEH,KAAK,EAALA,KAAF;QAASC,KAAK,EAALA,KAAT;QAAgBC,QAAQ,EAARA;MAAhB,CAAvB,CAAP;IACD;IAED;AACF;AACA;AACA;AACA;;;;WACE,0BAAiBE,OAAjB,EAA0B;MACxB,OAAO,KAAKD,UAAL,CAAgB,aAAhB,EAA+BC,OAA/B,CAAP;IACD;IAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,eAAMJ,KAAN,EAAaK,MAAb,EAAqB;MACnB,OAAO,KAAKF,UAAL,CAAgB,OAAhB,EAAyB;QAAEH,KAAK,EAALA,KAAF;QAASK,MAAM,EAANA;MAAT,CAAzB,CAAP;IACD;IAED;AACF;AACA;AACA;;;;WACE,iBAAQ;MACN,OAAO,KAAKF,UAAL,CAAgB,OAAhB,CAAP;IACD;IAED;AACF;AACA;AACA;AACA;;;;WACE,sBAAaH,KAAb,EAAoB;MAClB,OAAO,KAAKG,UAAL,CAAgB,cAAhB,EAAgC;QAAEH,KAAK,EAALA;MAAF,CAAhC,CAAP;IACD;IAED;AACF;AACA;AACA;AACA;;;;WACE,0BAAiB;MACf,OAAO,CAAC,CAAC,KAAKD,OAAP,IAAkB,CAAC,CAAC,KAAKA,OAAL,CAAaO,OAAxC;IACD;IAED;AACF;AACA;AACA;AACA;AACA;;;;WACE,uBAAcC,IAAd,EAAoB;MAClB,OAAO,CAAC,CAAC,KAAKR,OAAL,CAAaO,OAAb,CAAqBC,IAArB,CAAT;IACD;IAED;AACF;AACA;AACA;AACA;AACA;AACA;;;;WACE,oBAAWC,MAAX,EAAwC;MAAA;;MAAA,IAArBJ,OAAqB,uEAAXK,SAAW;;MACtC,IAAI,CAAC,KAAKC,cAAL,EAAL,EAA4B;QAC1B,MAAM,IAAIC,KAAJ,CAAU,mBAAV,CAAN;MACD;;MACD,IAAI,CAAC,KAAKC,aAAL,CAAmBJ,MAAnB,CAAL,EAAiC;QAC/B,MAAM,IAAIG,KAAJ,oBAAqBH,MAArB,6BAAN;MACD;;MACD,OAAO,UAACK,QAAD,EAAc;QACnBA,QAAQ,CAAC,KAAI,CAACd,OAAL,CAAaO,OAAb,CAAqBE,MAArB,EAA6BJ,OAA7B,CAAD,CAAR;MACD,CAFD;IAGD;;;;;;SA7FkBN,W"},"metadata":{},"sourceType":"module"}