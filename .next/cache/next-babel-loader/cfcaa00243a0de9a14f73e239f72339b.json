{"ast":null,"code":"import moment from 'moment';\nimport { SubscriptionClient } from 'graphql-subscriptions-client';\nimport { DEV_WS_NETWORK_URL } from '@constants/global.constants';\nimport { onDaysChange, onAuctionsChange, onPreviousAuctionsChange, onAllAuctionsChange, onAuctionsChangeByIds, onDesignerByIds, onAuctionsHistoryByIds, onNFTGlobalStats, onDigitalaxGarmentsCollectionChange, onDigitalaxMarketplaceOffers, onMarketplaceHistoryByIds, getAllDigitalaxGarmentsCollections, onDigitalaxGarmentsCollectionChangeByIds, allDigitalaxMarketplaceOffers } from '@services/api/gql.subscriptions.ws.service';\n\nclass WSService {\n  constructor() {\n    this.url = DEV_WS_NETWORK_URL;\n    this.client = null;\n  }\n\n  createClient() {\n    this.client = new SubscriptionClient(this.url, {\n      reconnect: true,\n      lazy: true // only connect when there is a query\n\n    });\n    return this.client;\n  }\n\n  setUrl(url) {\n    this.url = url;\n\n    if (this.client) {\n      this.client.close(true);\n    }\n\n    this.createClient();\n  }\n\n  onDaysChange(countDays) {\n    const date = moment().subtract(countDays, 'day').format('YYYY-MM-DD');\n    return this.client.request({\n      query: onDaysChange,\n      variables: {\n        date\n      }\n    });\n  }\n\n  onNFTGlobalStats() {\n    return this.client.request({\n      query: onNFTGlobalStats\n    });\n  }\n\n  onAuctionsChange() {\n    return this.client.request({\n      query: onAuctionsChange\n    });\n  }\n\n  onPreviousAuctionsChange() {\n    return this.client.request({\n      query: onPreviousAuctionsChange\n    });\n  }\n\n  onAllAuctionsChange() {\n    return this.client.request({\n      query: onAllAuctionsChange\n    });\n  }\n\n  onAuctionsChangeByIds(ids) {\n    return this.client.request({\n      query: onAuctionsChangeByIds,\n      variables: {\n        ids\n      }\n    });\n  }\n\n  onDesignerByIds(ids) {\n    return this.client.request({\n      query: onDesignerByIds,\n      variables: {\n        ids\n      }\n    });\n  }\n\n  onAuctionsHistoryByIds(ids) {\n    return this.client.request({\n      query: onAuctionsHistoryByIds,\n      variables: {\n        ids\n      }\n    });\n  }\n\n  onMarketplaceHistoryByIds(ids) {\n    return this.client.request({\n      query: onMarketplaceHistoryByIds,\n      variables: {\n        ids\n      }\n    });\n  }\n\n  onDigitalaxGarmentsCollectionChange(garmentAuctionNFTId) {\n    return this.client.request({\n      query: onDigitalaxGarmentsCollectionChange,\n      variables: {\n        garmentAuctionNFTId\n      }\n    });\n  }\n\n  getAllDigitalaxGarmentsCollections() {\n    return this.client.request({\n      query: getAllDigitalaxGarmentsCollections\n    });\n  }\n\n  onDigitalaxMarketplaceOffers(ids) {\n    return this.client.request({\n      query: onDigitalaxMarketplaceOffers,\n      variables: {\n        ids\n      }\n    });\n  }\n\n  getAllDigitalaxMarketplaceOffers() {\n    return this.client.request({\n      query: allDigitalaxMarketplaceOffers\n    });\n  }\n\n  onDigitalaxGarmentsCollectionChangeByIds(ids) {\n    return this.client.request({\n      query: onDigitalaxGarmentsCollectionChangeByIds,\n      variables: {\n        ids\n      }\n    });\n  }\n\n}\n\nexport default new WSService();","map":{"version":3,"names":["moment","SubscriptionClient","DEV_WS_NETWORK_URL","onDaysChange","onAuctionsChange","onPreviousAuctionsChange","onAllAuctionsChange","onAuctionsChangeByIds","onDesignerByIds","onAuctionsHistoryByIds","onNFTGlobalStats","onDigitalaxGarmentsCollectionChange","onDigitalaxMarketplaceOffers","onMarketplaceHistoryByIds","getAllDigitalaxGarmentsCollections","onDigitalaxGarmentsCollectionChangeByIds","allDigitalaxMarketplaceOffers","WSService","constructor","url","client","createClient","reconnect","lazy","setUrl","close","countDays","date","subtract","format","request","query","variables","ids","garmentAuctionNFTId","getAllDigitalaxMarketplaceOffers"],"sources":["/Volumes/Data/Work/Digitalax/PFPMint/src/services/api/ws.service.js"],"sourcesContent":["import moment from 'moment'\nimport { SubscriptionClient } from 'graphql-subscriptions-client'\nimport { DEV_WS_NETWORK_URL } from '@constants/global.constants'\nimport {\n  onDaysChange,\n  onAuctionsChange,\n  onPreviousAuctionsChange,\n  onAllAuctionsChange,\n  onAuctionsChangeByIds,\n  onDesignerByIds,\n  onAuctionsHistoryByIds,\n  onNFTGlobalStats,\n  onDigitalaxGarmentsCollectionChange,\n  onDigitalaxMarketplaceOffers,\n  onMarketplaceHistoryByIds,\n  getAllDigitalaxGarmentsCollections,\n  onDigitalaxGarmentsCollectionChangeByIds,\n  allDigitalaxMarketplaceOffers,\n} from '@services/api/gql.subscriptions.ws.service'\n\nclass WSService {\n  constructor() {\n    this.url = DEV_WS_NETWORK_URL\n    this.client = null\n  }\n\n  createClient() {\n    this.client = new SubscriptionClient(this.url, {\n      reconnect: true,\n      lazy: true, // only connect when there is a query\n    })\n    return this.client\n  }\n\n  setUrl(url) {\n    this.url = url\n    if (this.client) {\n      this.client.close(true)\n    }\n    this.createClient()\n  }\n\n  onDaysChange(countDays) {\n    const date = moment().subtract(countDays, 'day').format('YYYY-MM-DD')\n    return this.client.request({ query: onDaysChange, variables: { date } })\n  }\n\n  onNFTGlobalStats() {\n    return this.client.request({ query: onNFTGlobalStats })\n  }\n\n  onAuctionsChange() {\n    return this.client.request({ query: onAuctionsChange })\n  }\n\n  onPreviousAuctionsChange() {\n    return this.client.request({ query: onPreviousAuctionsChange })\n  }\n\n  onAllAuctionsChange() {\n    return this.client.request({ query: onAllAuctionsChange })\n  }\n\n  onAuctionsChangeByIds(ids) {\n    return this.client.request({\n      query: onAuctionsChangeByIds,\n      variables: { ids }\n    })\n  }\n\n  onDesignerByIds(ids) {\n    return this.client.request({ query: onDesignerByIds, variables: { ids } })\n  }\n\n  onAuctionsHistoryByIds(ids) {\n    return this.client.request({\n      query: onAuctionsHistoryByIds,\n      variables: { ids }\n    })\n  }\n\n  onMarketplaceHistoryByIds(ids) {\n    return this.client.request({\n      query: onMarketplaceHistoryByIds,\n      variables: { ids }\n    })\n  }\n\n  onDigitalaxGarmentsCollectionChange(garmentAuctionNFTId) {\n    return this.client.request({\n      query: onDigitalaxGarmentsCollectionChange,\n      variables: { garmentAuctionNFTId }\n    })\n  }\n\n  getAllDigitalaxGarmentsCollections() {\n    return this.client.request({\n      query: getAllDigitalaxGarmentsCollections,\n    })\n  }\n\n  onDigitalaxMarketplaceOffers(ids) {\n    return this.client.request({\n      query: onDigitalaxMarketplaceOffers,\n      variables: { ids },\n    })\n  }\n\n  getAllDigitalaxMarketplaceOffers() {\n    return this.client.request({\n      query: allDigitalaxMarketplaceOffers,\n    })\n  }\n\n  onDigitalaxGarmentsCollectionChangeByIds(ids) {\n    return this.client.request({\n      query: onDigitalaxGarmentsCollectionChangeByIds,\n      variables: { ids },\n    })\n  }\n}\n\nexport default new WSService()\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}