{"ast":null,"code":"import { fromJS } from 'immutable';\nimport PropTypes from 'prop-types';\nimport { propCheck } from 'redux-modules-middleware';\nimport cloneDeep from 'lodash.clonedeep';\n\nvar TransformModules = function TransformModules(defaultFields) {\n  return {\n    setValue: {\n      reducer: function reducer(state, _ref) {\n        var payload = _ref.payload;\n        // debugger;\n        state = state.set(payload.field, payload.value);\n        return state;\n      }\n    },\n    set: {\n      middleware: [propCheck({\n        field: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n        value: PropTypes.any,\n        isFromJS: PropTypes.bool\n      })],\n      reducer: function reducer(state, _ref2) {\n        var payload = _ref2.payload;\n\n        if (Array.isArray(payload.field)) {\n          state = state.setIn(payload.field, payload.isFromJS ? fromJS(payload.value) : payload.value);\n        } else {\n          state = state.set(payload.field, payload.isFromJS ? fromJS(payload.value) : payload.value);\n        }\n\n        return state;\n      }\n    },\n    setIn: {\n      reducer: function reducer(state, _ref3) {\n        var payload = _ref3.payload;\n        Object.keys(payload.params).forEach(function (field) {\n          state = state.setIn([payload.field, field], payload.params[field]);\n        });\n        return state;\n      }\n    },\n    setMultiple: {\n      reducer: function reducer(state, _ref4) {\n        var payload = _ref4.payload;\n        Object.keys(payload).forEach(function (field) {\n          state = state.setIn(field.toString().split('.'), payload[field]);\n        });\n        return state;\n      }\n    },\n    clear: {\n      reducer: function reducer() {\n        return cloneDeep(defaultFields);\n      }\n    },\n    clearByField: {\n      middleware: [propCheck({\n        field: PropTypes.oneOfType([PropTypes.string, PropTypes.array])\n      })],\n      reducer: function reducer(state, _ref5) {\n        var payload = _ref5.payload;\n        state = state.set(payload.field, cloneDeep(defaultFields.get(payload.field)));\n        return state;\n      }\n    }\n  };\n};\n\n_c = TransformModules;\nexport default TransformModules;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransformModules\");","map":{"version":3,"names":["fromJS","PropTypes","propCheck","cloneDeep","TransformModules","defaultFields","setValue","reducer","state","payload","set","field","value","middleware","oneOfType","string","array","any","isFromJS","bool","Array","isArray","setIn","Object","keys","params","forEach","setMultiple","toString","split","clear","clearByField","get"],"sources":["/Volumes/Data/Work/Digitalax/PFPMint/src/utils/transform-modules.js"],"sourcesContent":["import { fromJS } from 'immutable';\nimport PropTypes from 'prop-types';\nimport { propCheck } from 'redux-modules-middleware';\nimport cloneDeep from 'lodash.clonedeep';\n\nconst TransformModules = (defaultFields) => ({\n  setValue: {\n    reducer: (state, { payload }) => {\n      // debugger;\n      state = state.set(payload.field, payload.value);\n      return state;\n    },\n  },\n  set: {\n    middleware: [\n      propCheck({\n        field: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n        value: PropTypes.any,\n        isFromJS: PropTypes.bool,\n      }),\n    ],\n    reducer: (state, { payload }) => {\n      if (Array.isArray(payload.field)) {\n        state = state.setIn(payload.field, payload.isFromJS ? fromJS(payload.value) : payload.value);\n      } else {\n        state = state.set(payload.field, payload.isFromJS ? fromJS(payload.value) : payload.value);\n      }\n      return state;\n    },\n  },\n  setIn: {\n    reducer: (state, { payload }) => {\n      Object.keys(payload.params).forEach((field) => {\n        state = state.setIn([payload.field, field], payload.params[field]);\n      });\n\n      return state;\n    },\n  },\n  setMultiple: {\n    reducer: (state, { payload }) => {\n      Object.keys(payload).forEach((field) => {\n        state = state.setIn(field.toString().split('.'), payload[field]);\n      });\n      return state;\n    },\n  },\n  clear: {\n    reducer: () => cloneDeep(defaultFields),\n  },\n  clearByField: {\n    middleware: [\n      propCheck({\n        field: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n      }),\n    ],\n    reducer: (state, { payload }) => {\n      state = state.set(payload.field, cloneDeep(defaultFields.get(payload.field)));\n      return state;\n    },\n  },\n});\n\nexport default TransformModules;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}