{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Web3 from 'web3';\nimport BaseActions from '@actions/base-actions';\nimport userActions from '@actions/user.actions';\nimport globalReducer from '@reducers/global.reducer';\nimport { isMetamaskInstalled } from '@services/metamask.service';\nimport { getDefaultNetworkChainId, getEnabledNetworkByChainId, getAPIUrlByChainId, getWSUrlByChainId } from '@services/network.service';\nimport api from '@services/api/api.service';\nimport ws from '@services/api/ws.service';\nimport { STORAGE_IS_LOGGED_IN, STORAGE_WALLET } from '@constants/storage.constants';\nimport { WALLET_METAMASK, WALLET_ARKANE } from '@constants/global.constants';\n\nvar GlobalActions = /*#__PURE__*/function (_BaseActions) {\n  _inherits(GlobalActions, _BaseActions);\n\n  var _super = _createSuper(GlobalActions);\n\n  function GlobalActions() {\n    _classCallCheck(this, GlobalActions);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GlobalActions, [{\n    key: \"initApp\",\n    value: function initApp() {\n      var _this = this;\n\n      return /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch) {\n          var _window, ethereum;\n\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  if (!(localStorage.getItem(STORAGE_IS_LOGGED_IN) && localStorage.getItem(STORAGE_WALLET) === WALLET_ARKANE || !isMetamaskInstalled())) {\n                    _context2.next = 5;\n                    break;\n                  }\n\n                  dispatch(_this.changeNetwork(getDefaultNetworkChainId()));\n                  dispatch(_this.setValue('isInitialized', true));\n                  console.log('METAMASK WAS NOT DETECTED ON init');\n                  return _context2.abrupt(\"return\");\n\n                case 5:\n                  _window = window, ethereum = _window.ethereum;\n                  console.log('-----here: ', window.web3);\n                  window.web3 = new Web3(ethereum);\n                  /**\n                   * Init subscribers\n                   */\n\n                  ethereum.on('accountsChanged', function (accounts) {\n                    var _accounts = _slicedToArray(accounts, 1),\n                        account = _accounts[0];\n\n                    if (localStorage.getItem(STORAGE_IS_LOGGED_IN)) {\n                      dispatch(userActions.setValue('account', account || null));\n                      localStorage.setItem(STORAGE_IS_LOGGED_IN, 1);\n                    }\n                  });\n\n                  if (ethereum.selectedAddress && localStorage.getItem(STORAGE_IS_LOGGED_IN)) {\n                    dispatch(userActions.setValue('account', ethereum.selectedAddress));\n                  }\n\n                  ethereum.on('chainChanged', /*#__PURE__*/function () {\n                    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(chainId) {\n                      return _regeneratorRuntime().wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              console.log('chain changed... global new');\n\n                              if (chainId) {\n                                _context.next = 3;\n                                break;\n                              }\n\n                              return _context.abrupt(\"return\");\n\n                            case 3:\n                              dispatch(_this.changeNetwork(chainId));\n\n                              if (getEnabledNetworkByChainId(chainId)) {} else {\n                                console.error('Wrong network. Contracts are not deployed yet');\n                              }\n\n                            case 5:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee);\n                    }));\n\n                    return function (_x2) {\n                      return _ref2.apply(this, arguments);\n                    };\n                  }());\n                  dispatch(_this.changeNetwork(ethereum.chainId));\n                  dispatch(_this.setValue('isInitialized', true));\n\n                case 13:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    }\n  }, {\n    key: \"changeNetwork\",\n    value: function changeNetwork(chainId) {\n      var _this2 = this;\n\n      return /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dispatch) {\n          var url, wsUrl;\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  url = getAPIUrlByChainId(chainId);\n                  wsUrl = getWSUrlByChainId(chainId);\n                  api.setUrl(url);\n                  ws.setUrl(wsUrl);\n                  dispatch(_this2.setValue('chainId', chainId));\n\n                case 5:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }();\n    }\n  }]);\n\n  return GlobalActions;\n}(BaseActions);\n\nexport default new GlobalActions(globalReducer);","map":{"version":3,"names":["Web3","BaseActions","userActions","globalReducer","isMetamaskInstalled","getDefaultNetworkChainId","getEnabledNetworkByChainId","getAPIUrlByChainId","getWSUrlByChainId","api","ws","STORAGE_IS_LOGGED_IN","STORAGE_WALLET","WALLET_METAMASK","WALLET_ARKANE","GlobalActions","dispatch","localStorage","getItem","changeNetwork","setValue","console","log","window","ethereum","web3","on","accounts","account","setItem","selectedAddress","chainId","error","url","wsUrl","setUrl"],"sources":["/Volumes/Data/Work/Digitalax/PFPMint/src/actions/global.new.actions.js"],"sourcesContent":["import Web3 from 'web3'\nimport BaseActions from '@actions/base-actions'\nimport userActions from '@actions/user.actions'\nimport globalReducer from '@reducers/global.reducer'\nimport { isMetamaskInstalled } from '@services/metamask.service'\nimport {\n  getDefaultNetworkChainId,\n  getEnabledNetworkByChainId,\n  getAPIUrlByChainId,\n  getWSUrlByChainId,\n} from '@services/network.service'\n\nimport api from '@services/api/api.service'\nimport ws from '@services/api/ws.service'\n\nimport { STORAGE_IS_LOGGED_IN, STORAGE_WALLET } from '@constants/storage.constants'\nimport { WALLET_METAMASK, WALLET_ARKANE } from '@constants/global.constants'\n\nclass GlobalActions extends BaseActions {\n  initApp() {\n    return async (dispatch) => {\n      /**\n       * Check installed Metamask or \n      Check if Arkane loggedIn\n       */\n      if (\n        (localStorage.getItem(STORAGE_IS_LOGGED_IN) &&\n          localStorage.getItem(STORAGE_WALLET) === WALLET_ARKANE) ||\n        !isMetamaskInstalled()\n      ) {\n        dispatch(this.changeNetwork(getDefaultNetworkChainId()))\n        dispatch(this.setValue('isInitialized', true))\n        console.log('METAMASK WAS NOT DETECTED ON init')\n        return\n      }\n      const { ethereum } = window\n      console.log('-----here: ', window.web3)\n      window.web3 = new Web3(ethereum)\n      /**\n       * Init subscribers\n       */\n      ethereum.on('accountsChanged', (accounts) => {\n        const [account] = accounts\n        if (localStorage.getItem(STORAGE_IS_LOGGED_IN)) {\n          dispatch(userActions.setValue('account', account || null))\n          localStorage.setItem(STORAGE_IS_LOGGED_IN, 1)\n        }\n      })\n\n      if (ethereum.selectedAddress && localStorage.getItem(STORAGE_IS_LOGGED_IN)) {\n        dispatch(userActions.setValue('account', ethereum.selectedAddress))\n      }\n\n      ethereum.on('chainChanged', async (chainId) => {\n\n        console.log('chain changed... global new')\n        \n        if (!chainId) {\n          return\n        }\n\n        dispatch(this.changeNetwork(chainId))\n\n        if (getEnabledNetworkByChainId(chainId)) {\n        } else {\n          console.error('Wrong network. Contracts are not deployed yet')\n        }\n      })\n\n      dispatch(this.changeNetwork(ethereum.chainId))\n      dispatch(this.setValue('isInitialized', true))\n    }\n  }\n\n  \n  changeNetwork(chainId) {\n    return async (dispatch) => {\n      const url = getAPIUrlByChainId(chainId)\n      const wsUrl = getWSUrlByChainId(chainId)\n\n      api.setUrl(url)\n      ws.setUrl(wsUrl)\n      dispatch(this.setValue('chainId', chainId))\n    }\n  }\n}\n\nexport default new GlobalActions(globalReducer)\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}