{"ast":null,"code":"import Web3 from 'web3';\nexport const isMetamaskInstalled = () => typeof window.ethereum !== 'undefined';\nexport const handleSignMessage = ({\n  publicAddress,\n  signMsg\n}) => {\n  console.log('window.web3: ', window.web3);\n  return new Promise((resolve, reject) => window.web3.eth.personal.sign(signMsg, publicAddress, (err, signature) => {\n    if (err) return reject(err);\n    return resolve({\n      publicAddress,\n      signature\n    });\n  }));\n};","map":{"version":3,"names":["Web3","isMetamaskInstalled","window","ethereum","handleSignMessage","publicAddress","signMsg","console","log","web3","Promise","resolve","reject","eth","personal","sign","err","signature"],"sources":["/Volumes/Data/Work/Digitalax/PFPMint/src/services/metamask.service.js"],"sourcesContent":["import Web3 from 'web3';\n\nexport const isMetamaskInstalled = () => typeof window.ethereum !== 'undefined';\n\nexport const handleSignMessage = ({ publicAddress, signMsg }) => {\n  console.log('window.web3: ', window.web3)\n  return new Promise((resolve, reject) =>\n    window.web3.eth.personal.sign(signMsg, publicAddress, (err, signature) => {\n      if (err) return reject(err);\n      return resolve({ publicAddress, signature });\n    })\n  );\n};\n"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,OAAO,MAAMC,mBAAmB,GAAG,MAAM,OAAOC,MAAM,CAACC,QAAd,KAA2B,WAA7D;AAEP,OAAO,MAAMC,iBAAiB,GAAG,CAAC;EAAEC,aAAF;EAAiBC;AAAjB,CAAD,KAAgC;EAC/DC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BN,MAAM,CAACO,IAApC;EACA,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KACjBV,MAAM,CAACO,IAAP,CAAYI,GAAZ,CAAgBC,QAAhB,CAAyBC,IAAzB,CAA8BT,OAA9B,EAAuCD,aAAvC,EAAsD,CAACW,GAAD,EAAMC,SAAN,KAAoB;IACxE,IAAID,GAAJ,EAAS,OAAOJ,MAAM,CAACI,GAAD,CAAb;IACT,OAAOL,OAAO,CAAC;MAAEN,aAAF;MAAiBY;IAAjB,CAAD,CAAd;EACD,CAHD,CADK,CAAP;AAMD,CARM"},"metadata":{},"sourceType":"module"}