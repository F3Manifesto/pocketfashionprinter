{"ast":null,"code":"var _jsxFileName = \"/Volumes/Data/Work/Digitalax/PFPMint/src/containers/modals/modal-crypto-options/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { MaxUint256 } from '@ethersproject/constants';\nimport cryptoActions from '@actions/crypto.actions';\nimport { closeCryptoOptionsModal, openPurchaseSuccessModal } from '@actions/modals.actions';\nimport { getPayableTokenReport } from '@services/api/apiService';\nimport { getSelectedCrypto, getTicketPrice } from '@selectors/crypto.selectors';\nimport useERC20Approve from '@hooks/useERC20Approve';\nimport { getERC20ContractAddressByChainId } from '@services/network.service';\nimport { POLYGON_CHAINID } from '@constants/global.constants';\nimport { convertToWei } from '@helpers/price.helpers';\nimport Button from '@components/buttons/button';\nimport Modal from '@components/modal';\nimport styles from './styles.module.scss';\nconst cryptoList = [{\n  name: 'mona',\n  label: 'MONA'\n}, {\n  name: 'dai',\n  label: 'DAI'\n}, {\n  name: 'weth',\n  label: 'ETH'\n}, {\n  name: 'bnt',\n  label: 'BNT'\n}, {\n  name: 'usdt',\n  label: 'USDT'\n}, {\n  name: 'w3f',\n  label: 'W3F'\n}, {\n  name: 'matic',\n  label: 'MATIC'\n}];\n\nconst ModalCryptoOptions = () => {\n  const dispatch = useDispatch();\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: cryptoPrice,\n    1: setCryptoPrice\n  } = useState(1);\n  const {\n    approved,\n    approveFunc,\n    sendCrypto\n  } = useERC20Approve(MaxUint256);\n  const selectedCrypto = useSelector(getSelectedCrypto);\n  const ticketPrice = useSelector(getTicketPrice);\n\n  const handleClose = () => {\n    dispatch(closeCryptoOptionsModal());\n  };\n\n  const fetchCryptoPrice = async crypto => {\n    if (crypto === 'usdt' || crypto === 'dai') {\n      setCryptoPrice(1);\n      return;\n    }\n\n    const erc20ContractAddress = getERC20ContractAddressByChainId(crypto.toLowerCase(), POLYGON_CHAINID);\n    const result = await getPayableTokenReport(POLYGON_CHAINID, erc20ContractAddress);\n    if (!result) return;\n    const {\n      payableTokenReport\n    } = result;\n    if (!payableTokenReport) return;\n    setCryptoPrice(payableTokenReport.payload / 1e18);\n  };\n\n  useEffect(() => {\n    if (window.localStorage.getItem('CRYPTO_OPTION')) {\n      dispatch(cryptoActions.setCrypto(window.localStorage.getItem('CRYPTO_OPTION') || ''));\n    }\n  }, []);\n  useEffect(() => {\n    if (selectedCrypto) {\n      fetchCryptoPrice(selectedCrypto);\n    }\n  }, [selectedCrypto]);\n\n  const onCryptoOptionSelect = option => {\n    if (!loading) {\n      dispatch(cryptoActions.setCrypto(option));\n      window.localStorage.setItem('CRYPTO_OPTION', option.toString());\n    }\n  };\n\n  const onApprove = async () => {\n    if (!approved) {\n      try {\n        setLoading(true);\n        await approveFunc();\n        setLoading(false);\n      } catch (err) {\n        console.log(err);\n        setLoading(false);\n        throw err;\n      }\n    } else {\n      setLoading(true);\n      const {\n        promise,\n        unsubscribe\n      } = await sendCrypto(convertToWei(cryptoPrice * ticketPrice));\n      await promise.then(async hash => {\n        console.log('this is after calling buy offer');\n        unsubscribe();\n        setLoading(false);\n        dispatch(closeCryptoOptionsModal());\n        dispatch(openPurchaseSuccessModal());\n      }).catch(async err => {\n        console.log(err);\n        unsubscribe();\n        setLoading(false);\n        dispatch(closeCryptoOptionsModal());\n        toast(err.message);\n      });\n    }\n  };\n\n  return __jsx(React.Fragment, null, /*#__PURE__*/createPortal(__jsx(Modal, {\n    onClose: () => handleClose(),\n    className: styles.cryptoOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.modalItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, __jsx(\"p\", {\n    className: styles.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, \" Choose A Token To Get A Ticket. \"), __jsx(\"div\", {\n    className: styles.cryptoList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, cryptoList.map(cryptoItem => {\n    const {\n      name,\n      label\n    } = cryptoItem;\n    return __jsx(\"div\", {\n      className: `${styles.cryptoIcon} ${selectedCrypto === name && styles.selected} ${loading && styles.disabled}`,\n      onClick: () => onCryptoOptionSelect(name),\n      key: name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: `/images/cryptos/options/${name}.png`,\n      className: \"m-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 23\n      }\n    }), __jsx(\"span\", {\n      className: \"text-xs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 23\n      }\n    }, \" \", label, \" \"));\n  })), __jsx(Button, {\n    className: styles.approveButton,\n    onClick: onApprove,\n    disabled: !cryptoList.length,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, !approved ? 'Approve' : 'Purchase'))), document.body));\n};\n\nexport default ModalCryptoOptions;","map":{"version":3,"names":["React","useState","useEffect","createPortal","useDispatch","useSelector","toast","MaxUint256","cryptoActions","closeCryptoOptionsModal","openPurchaseSuccessModal","getPayableTokenReport","getSelectedCrypto","getTicketPrice","useERC20Approve","getERC20ContractAddressByChainId","POLYGON_CHAINID","convertToWei","Button","Modal","styles","cryptoList","name","label","ModalCryptoOptions","dispatch","loading","setLoading","cryptoPrice","setCryptoPrice","approved","approveFunc","sendCrypto","selectedCrypto","ticketPrice","handleClose","fetchCryptoPrice","crypto","erc20ContractAddress","toLowerCase","result","payableTokenReport","payload","window","localStorage","getItem","setCrypto","onCryptoOptionSelect","option","setItem","toString","onApprove","err","console","log","promise","unsubscribe","then","hash","catch","message","cryptoOptions","modalItem","description","map","cryptoItem","cryptoIcon","selected","disabled","approveButton","length","document","body"],"sources":["/Volumes/Data/Work/Digitalax/PFPMint/src/containers/modals/modal-crypto-options/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { createPortal } from 'react-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { toast } from 'react-toastify'\nimport { MaxUint256 } from '@ethersproject/constants'\n\nimport cryptoActions from '@actions/crypto.actions'\nimport {\n  closeCryptoOptionsModal,\n  openPurchaseSuccessModal\n} from '@actions/modals.actions'\n\nimport {\n  getPayableTokenReport\n} from '@services/api/apiService'\n\nimport { \n  getSelectedCrypto,\n  getTicketPrice\n} from '@selectors/crypto.selectors'\n\nimport useERC20Approve from '@hooks/useERC20Approve'\n\nimport {\n  getERC20ContractAddressByChainId\n} from '@services/network.service'\n\nimport { POLYGON_CHAINID } from '@constants/global.constants'\n\nimport { convertToWei } from '@helpers/price.helpers'\n\nimport Button from '@components/buttons/button'\nimport Modal from '@components/modal'\n\nimport styles from './styles.module.scss'\n\n\nconst cryptoList = [\n  {\n    name: 'mona',\n    label: 'MONA'\n  },\n  {\n    name: 'dai',\n    label: 'DAI'\n  },\n  {\n    name: 'weth',\n    label: 'ETH'\n  },\n  {\n    name: 'bnt',\n    label: 'BNT'\n  },\n  {\n    name: 'usdt',\n    label: 'USDT'\n  },\n  {\n    name: 'w3f',\n    label: 'W3F'\n  },\n  {\n    name: 'matic',\n    label: 'MATIC'\n  }\n]\n\n\nconst ModalCryptoOptions = () => {\n  const dispatch = useDispatch()\n  const [loading, setLoading] = useState(false)\n  const [cryptoPrice, setCryptoPrice] = useState(1)\n  const { approved, approveFunc, sendCrypto } = useERC20Approve(MaxUint256)\n\n  const selectedCrypto = useSelector(getSelectedCrypto)\n  const ticketPrice = useSelector(getTicketPrice)\n\n  const handleClose = () => {\n    dispatch(closeCryptoOptionsModal())\n  }\n\n  const fetchCryptoPrice = async crypto => {\n    if (crypto === 'usdt' || crypto === 'dai') {\n      setCryptoPrice(1)\n      return\n    }\n\n    const erc20ContractAddress = getERC20ContractAddressByChainId(crypto.toLowerCase(), POLYGON_CHAINID)\n\n    const result = await getPayableTokenReport(\n      POLYGON_CHAINID, erc20ContractAddress\n    )\n\n    if (!result) return\n    const { payableTokenReport } = result\n\n    if (!payableTokenReport) return\n\n    setCryptoPrice(payableTokenReport.payload / 1e18)\n  }\n\n  useEffect(() => {\n    if (window.localStorage.getItem('CRYPTO_OPTION')) {\n      dispatch(cryptoActions.setCrypto(window.localStorage.getItem('CRYPTO_OPTION') || ''))\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedCrypto) { \n      fetchCryptoPrice(selectedCrypto)\n    }\n  }, [selectedCrypto])\n\n  const onCryptoOptionSelect = option => {\n    if (!loading) {\n      dispatch(cryptoActions.setCrypto(option))\n      window.localStorage.setItem('CRYPTO_OPTION', option.toString())\n    }\n  }\n\n  const onApprove = async () => {\n    if (!approved) {\n      try {\n        setLoading(true)\n        await approveFunc()\n        setLoading(false)\n      } catch (err) {\n        console.log(err)\n        setLoading(false)\n        throw err\n      }\n    } else {\n      setLoading(true)\n      const { promise, unsubscribe } = await sendCrypto(convertToWei(cryptoPrice * ticketPrice))\n\n      await promise\n      .then(async (hash) => {\n        console.log('this is after calling buy offer')\n        unsubscribe()\n        setLoading(false)\n        dispatch(closeCryptoOptionsModal())\n        dispatch(openPurchaseSuccessModal())\n      })\n      .catch(async (err) => {\n        console.log(err)\n        unsubscribe()\n        setLoading(false)\n\n        dispatch(closeCryptoOptionsModal())\n        toast(err.message)\n      })\n    }\n  }\n\n  return (\n    <>\n      {createPortal(\n        <Modal onClose={() => handleClose()} className={styles.cryptoOptions}>\n          <div className={styles.modalItem}>\n            <p className={styles.description}> Choose A Token To Get A Ticket. </p>\n            <div className={styles.cryptoList}>\n              {\n                cryptoList.map(cryptoItem => {\n                  const { name, label } = cryptoItem\n                  return (\n                    <div\n                      className={`${styles.cryptoIcon} ${\n                        selectedCrypto === name && styles.selected\n                      } ${loading && styles.disabled}`}\n                      onClick={() => onCryptoOptionSelect(name)}\n                      key={name}\n                    >\n                      <img src={`/images/cryptos/options/${name}.png`} className='m-auto' />\n                      <span className='text-xs'> { label } </span>\n                    </div>\n                  )\n                })\n              }\n            </div>\n\n            <Button\n              className={styles.approveButton}\n              onClick={onApprove}\n              disabled={!cryptoList.length}\n              loading={loading}\n            >\n              {!approved ? 'Approve' : 'Purchase'}\n            </Button>\n          </div>\n        </Modal>,\n        document.body\n      )}\n    </>\n  )\n}\n\nexport default ModalCryptoOptions\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}