{"ast":null,"code":"import Web3 from 'web3';\nimport { getERC20ContractAddressByChainId } from './network.service';\nimport ERC20ABI from '@constants/erc20_abi.json';\nexport const getERC20TokenContract = async (tokenId, chainId) => {\n  const web3 = new Web3(window.ethereum);\n  const address = await getERC20ContractAddressByChainId(tokenId, chainId);\n  const contract = await new web3.eth.Contract(ERC20ABI, address);\n  return contract;\n};","map":{"version":3,"names":["Web3","getERC20ContractAddressByChainId","ERC20ABI","getERC20TokenContract","tokenId","chainId","web3","window","ethereum","address","contract","eth","Contract"],"sources":["/Volumes/Data/Work/Digitalax/PFPMint/src/services/contract.service.js"],"sourcesContent":["import Web3 from 'web3'\nimport {\n  getERC20ContractAddressByChainId\n} from './network.service'\n\nimport ERC20ABI from '@constants/erc20_abi.json'\n\nexport const getERC20TokenContract = async (tokenId, chainId) => {\n  const web3 = new Web3(window.ethereum)\n  const address = await getERC20ContractAddressByChainId(tokenId, chainId)\n  const contract = await new web3.eth.Contract(ERC20ABI, address)\n\n  return contract\n}\n"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,SACEC,gCADF,QAEO,mBAFP;AAIA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAOC,OAAP,EAAgBC,OAAhB,KAA4B;EAC/D,MAAMC,IAAI,GAAG,IAAIN,IAAJ,CAASO,MAAM,CAACC,QAAhB,CAAb;EACA,MAAMC,OAAO,GAAG,MAAMR,gCAAgC,CAACG,OAAD,EAAUC,OAAV,CAAtD;EACA,MAAMK,QAAQ,GAAG,MAAM,IAAIJ,IAAI,CAACK,GAAL,CAASC,QAAb,CAAsBV,QAAtB,EAAgCO,OAAhC,CAAvB;EAEA,OAAOC,QAAP;AACD,CANM"},"metadata":{},"sourceType":"module"}