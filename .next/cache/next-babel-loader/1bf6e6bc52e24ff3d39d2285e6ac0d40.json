{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState, useRef } from 'react';\nimport api from '@services/api/espa/api.service';\nimport { USERNAME_AVAILABLE } from '@constants/global.constants';\nexport function useSignMessage(account) {\n  const {\n    0: signMsg,\n    1: setSignMsg\n  } = useState(null);\n  useEffect(() => {\n    api.fetchAuthToken(account).then(msg => setSignMsg(msg));\n  }, [account]);\n  return signMsg;\n}\nexport function useUserNameAvailable(username) {\n  const {\n    0: isAvailable,\n    1: setUserNameAvailable\n  } = useState(USERNAME_AVAILABLE);\n  const timer = useRef(null);\n  useEffect(() => {\n    if (username) {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n\n      timer.current = setTimeout(() => {\n        api.checkUserName(username).then(isAvailable => setUserNameAvailable(isAvailable));\n      }, 1000);\n    }\n  }, [username]);\n  return isAvailable;\n}\nexport function useNFTs(account) {\n  const {\n    0: nfts,\n    1: setNfts\n  } = useState(null);\n  useEffect(() => {\n    api.fetchNfts(account).then(data => {\n      let items = [];\n\n      if (data.digitalaxCollectors.length) {\n        items = data.digitalaxCollectors[0].parentsOwned;\n      }\n\n      for (let item of data.digitalaxGarments) {\n        if (!items.find(el => el.id === item.id)) {\n          items = [...items, _objectSpread(_objectSpread({}, item), {}, {\n            isStaked: true\n          })];\n        }\n      }\n\n      setNfts(items);\n    }).catch(e => setNfts([]));\n  }, [account]);\n  return nfts;\n}\nexport function useProfile() {\n  const {\n    0: user,\n    1: setUser\n  } = useState(null);\n  useEffect(() => {\n    api.getProfile().then(data => setUser(data));\n  }, []);\n  return user;\n}\nexport function useMyIP() {\n  const {\n    0: ip,\n    1: setIp\n  } = useState(null);\n  useEffect(() => {\n    api.getMyIP().then(data => setIp(data));\n  }, []);\n  return ip;\n}","map":{"version":3,"names":["useEffect","useState","useRef","api","USERNAME_AVAILABLE","useSignMessage","account","signMsg","setSignMsg","fetchAuthToken","then","msg","useUserNameAvailable","username","isAvailable","setUserNameAvailable","timer","current","clearTimeout","setTimeout","checkUserName","useNFTs","nfts","setNfts","fetchNfts","data","items","digitalaxCollectors","length","parentsOwned","item","digitalaxGarments","find","el","id","isStaked","catch","e","useProfile","user","setUser","getProfile","useMyIP","ip","setIp","getMyIP"],"sources":["/Volumes/Data/Work/Digitalax/PFPMint/src/hooks/espa/user.hooks.js"],"sourcesContent":["import { useEffect, useState, useRef } from 'react';\nimport api from '@services/api/espa/api.service';\nimport { USERNAME_AVAILABLE } from '@constants/global.constants'\n\nexport function useSignMessage(account) {\n  const [signMsg, setSignMsg] = useState(null);\n\n  useEffect(() => {\n    api.fetchAuthToken(account).then((msg) => setSignMsg(msg));\n  }, [account]);\n\n  return signMsg;\n}\n\nexport function useUserNameAvailable(username) {\n  const [isAvailable, setUserNameAvailable] = useState(USERNAME_AVAILABLE);\n  const timer = useRef(null);\n\n  useEffect(() => {\n    if (username) {\n      if (timer.current) {\n        clearTimeout(timer.current)\n      }\n\n      timer.current = setTimeout(() => {\n        api.checkUserName(username).then(isAvailable => setUserNameAvailable(isAvailable))\n      }, 1000)\n      \n    }\n  }, [username])\n\n  return isAvailable\n}\n\nexport function useNFTs(account) {\n  const [nfts, setNfts] = useState(null);\n\n  useEffect(() => {\n    api\n      .fetchNfts(account)\n      .then((data) => {\n        let items = [];\n        if (data.digitalaxCollectors.length) {\n          items = data.digitalaxCollectors[0].parentsOwned;\n        }\n        for (let item of data.digitalaxGarments) {\n          if (!items.find((el) => el.id === item.id)) {\n            items = [...items, { ...item, isStaked: true }];\n          }\n        }\n\n        setNfts(items);\n      })\n      .catch((e) => setNfts([]));\n  }, [account]);\n\n  return nfts;\n}\n\nexport function useProfile() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    api.getProfile().then((data) => setUser(data));\n  }, []);\n\n  return user;\n}\n\nexport function useMyIP() {\n  const [ip, setIp] = useState(null);\n\n  useEffect(() => {\n    api.getMyIP().then((data) => setIp(data));\n  }, []);\n\n  return ip;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}