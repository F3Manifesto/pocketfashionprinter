'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _hoistNonReactStatics = require('hoist-non-react-statics');

var _hoistNonReactStatics2 = _interopRequireDefault(_hoistNonReactStatics);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = require('react-redux');

var _selectorFactory = require('./selectorFactory');

var _selectorFactory2 = _interopRequireDefault(_selectorFactory);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var moduleRegistrationDecorator = function moduleRegistrationDecorator(modules, WrappedComponent) {
  var _class, _temp;

  return _temp = _class = function (_Component) {
    _inherits(RegisterModules, _Component);

    function RegisterModules(props, context) {
      _classCallCheck(this, RegisterModules);

      var _this = _possibleConstructorReturn(this, (RegisterModules.__proto__ || Object.getPrototypeOf(RegisterModules)).call(this, props, context));

      if (context.registerModule) {
        context.registerModule(modules);
      }
      return _this;
    }

    _createClass(RegisterModules, [{
      key: 'render',
      value: function render() {
        return _react2.default.createElement(WrappedComponent, this.props);
      }
    }]);

    return RegisterModules;
  }(_react.Component), _class.contextTypes = {
    registerModule: _propTypes2.default.func
  }, _temp;
};

function connectModules(mapStateToProps, modules) {
  return function (WrappedComponent) {
    return (0, _reactRedux.connectAdvanced)((0, _selectorFactory2.default)(mapStateToProps, modules))(moduleRegistrationDecorator(modules, WrappedComponent));
  };
}

exports.default = connectModules;